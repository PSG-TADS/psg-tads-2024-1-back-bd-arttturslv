// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using locadora.Models;

#nullable disable

namespace locadora.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240423190352_locadoraBD-art")]
    partial class locadoraBDart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("locadora.Models.Cliente", b =>
                {
                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CPF");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("locadora.Models.Locacao", b =>
                {
                    b.Property<string>("LocacaoID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Ativa")
                        .HasColumnType("bit");

                    b.Property<string>("ClienteID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double?>("Custo")
                        .HasColumnType("float");

                    b.Property<DateTime?>("DataDevolucao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlacaID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocacaoID");

                    b.HasIndex("ClienteID");

                    b.ToTable("Locacao");
                });

            modelBuilder.Entity("locadora.Models.Veiculo", b =>
                {
                    b.Property<string>("PlacaID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<bool>("Disponibilidade")
                        .HasColumnType("bit");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecoAtrasoDiario")
                        .HasColumnType("float");

                    b.Property<double>("PrecoDiario")
                        .HasColumnType("float");

                    b.HasKey("PlacaID");

                    b.ToTable("Veiculo");
                });

            modelBuilder.Entity("locadora.Models.Locacao", b =>
                {
                    b.HasOne("locadora.Models.Cliente", null)
                        .WithMany("Locacoes")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("locadora.Models.Cliente", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
